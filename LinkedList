package doublyLinkedList;

public class LinkedList {
	ListNode head;
	ListNode tail;
	int length;

	public LinkedList() {
		this.head = null;
		this.tail = null;
		this.length = 0;
	}

	public boolean isEmpty() {
		return length == 0;
	}

	public int length() {
		return length;
	}

	public void insertEnd(int data) {
		ListNode newNode = new ListNode();
		newNode.data = data;
		if (isEmpty()) {
			head = newNode;
		} else {
			tail.next = newNode;
			newNode.previous = tail;
		}
		System.out.println("Enter to inserEnd");
		tail = newNode;
		length++;
	}

	public void insertFirst(int data) {
		ListNode newNode = new ListNode();
		newNode.data = data;
		if (isEmpty()) {
			tail = newNode;
		} else {
			head.previous = newNode;
			newNode.next = head;
		}

		head = newNode;
		length++;

	}
}
